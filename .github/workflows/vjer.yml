name: Shared Vjer Action

on:
  workflow_call:
    inputs:
      # required inputs
      action:
        required: true
        type: string
      os:
        required: true
        type: string
      python-version:
        required: true
        type: string
      # optional inputs
      build-num:
        type: string
        default: ${{ github.run_id }}
      enable-git-commit:
        type: boolean
        default: false
      pyproject-build:
        type: string
      use-pypi-test:
        type: boolean
        default: false
      vjer-env:
        type: string
        default: development
      vjer-local:
        type: boolean
        default: false
      vjer-version:
        type: string

env:
  ARTIFACTS_DIR: artifacts
  UNIT_TEST_DIR: test_results

jobs:
  vjer:
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: "pip"
      - name: Install vjer on UNIX
        if: ${{ ! inputs.vjer-local && inputs.os != 'windows-latest' }}
        run: |
          if [[ -n "${{ inputs.vjer-version }}" ]]; then install_version="==${{ inputs.vjer-version }}"; fi
          if [[ "${{ inputs.use-pypi-test }}" == "true" ]]; then pypi_test_option="--index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple"; fi
          pip install $pypi_test_option vjer$install_version
      - name: Install vjer on Windows
        if: ${{ ! inputs.vjer-local && inputs.os == 'windows-latest' }}
        run: |
          if (${{ inputs.vjer-version }} -ne "") { $install_version = "==$env:inputs_vjer_version" }
          if (${{ inputs.use-pypi-test }} -eq "true") { $pypi_test_option = "--index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple" }
          pip install $pypi_test_option vjer$install_version --use-pep517 --prefer-binary
      - name: Install local vjer
        if: inputs.vjer-local
        run: pip install .
      - name: Enable git commit
        if: inputs.enable-git-commit
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git pull
      - name: Run ${{ inputs.action }}
        run: vjer ${{ inputs.action }}
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          VJER_BUILD_NUM: ${{ inputs.build-num }}
          VJER_ENV: ${{ inputs.vjer-env }}
          VJER_PYPROJECT_BUILD: ${{ inputs.pyproject-build }}
      - name: Upload unit test results
        if: inputs.action == 'test'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UNIT_TEST_DIR }}-${{ inputs.os }}-${{ inputs.python-version }}
          path: ${{ env.UNIT_TEST_DIR }}
      - name: Upload artifacts
        if: inputs.action == 'build'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACTS_DIR }}
          path: ${{ env.ARTIFACTS_DIR }}

# cSpell:ignore pyproject dockerhub
