on:
  workflow_call:
    inputs:
      skip-pypi-test:
        type: boolean
        default: false
      test-action:
        type: string


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  UNIT_TEST_DIR: test_results

jobs:
  test:
    runs-on: ${{ matrix.os }}
    steps:
      - name: Run Vjer test
        uses: arisilon/shared-actions/.github/actions/vjer@main
        with:
          action: test
          os: ${{ matrix.os }}
          pyproject-build: true
          python-version: ${{ matrix.python-version }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.12
          - 3.13

  publish-test-results:
    name: Publish tests results
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.UNIT_TEST_DIR }}
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: "${{ env.UNIT_TEST_DIR }}/**/*.xml"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Run Vjer build
        uses: arisilon/shared-actions/.github/actions/vjer@main
        with:
          action: build
          os: ubuntu-latest
          pyproject-build: true
          python-version: 3.12

  install-test:
    needs: build
    uses: ./.github/workflows/install-test.yaml
    if: inputs.test-action != ''
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      test-action: ${{ inputs.test-action }}
      test-dir: tests
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.12
          - 3.13

  pre_release:
    if: (github.event_name != 'pull_request') && ((github.ref_name == 'main') || startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'feature/'))
    needs: install-test
    runs-on: ubuntu-latest
    environment: pre_release
    steps:
      - name: Run Vjer pre_release
        if: ${{ !inputs.skip-pypi-test }}
        uses: arisilon/shared-actions/.github/actions/vjer@main
        with:
          action: pre_release
          enable-git-commit: ${{ secrets.RELEASE_TOKEN }}
          os: ubuntu-latest
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          pyproject-build: true
          python-version: 3.12

  rc_release:
    if: (github.event_name != 'pull_request') && ((github.ref_name == 'main') || startsWith(github.ref_name, 'release/'))
    needs: pre_release
    runs-on: ubuntu-latest
    environment: rc_release
    steps:
      - name: Run Vjer rc_release
        uses: arisilon/shared-actions/.github/actions/vjer@main
        with:
          action: release
          enable-git-commit: ${{ secrets.RELEASE_TOKEN }}
          os: ubuntu-latest
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          pyproject-build: true
          python-version: 3.12
        env:
            VJER_CFG: vjer-rc.yml

  release:
    if: (github.event_name != 'pull_request') && ((github.ref_name == 'main') || startsWith(github.ref_name, 'release/'))
    needs: pre_release
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Run Vjer release
        uses: arisilon/shared-actions/.github/actions/vjer@main
        with:
          action: release
          enable-git-commit: ${{ secrets.RELEASE_TOKEN }}
          os: ubuntu-latest
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          pyproject-build: true
          python-version: 3.12

# cSpell:ignore pyproject
